/**
 * INTRODUCTION DU JEU : TITRE DU JEU
 */

Datas.push(new LevelDatas(
	CreditsLevel,
	"",
	"Made by <a href=\"http://neamar.fr\">Neamar</a>, designed by <a href=\"http://licoti2.free.fr\">Licoti</a>",
	"Sponsorisé par http://www.mini-jeu-gratuit.fr"));
	
/**
 * PREMIÈRE PARTIE DE JEU : EULER
 */
Datas.push(new LevelDatas(
	EulerPathLevel,
	"530,310|440,355|540,355|590,380|440,405|540,405|530,450:0,2|2,1|1,4|4,5|5,6|6,3|3,0",
	"Flèche tutoriel 1",
	"<p>Reproduisez le motif gris d'un seul mouvement de souris, sans repasser deux fois sur le même trait (mais les croisements de fil sont autorisés).<br /> Double cliquez pour recommencer !</p><p></p>Ayez des mouvements amples de souris, imaginez que vous tirez un fil derrière vous : pas besoin de frôler les clous !</p><p></p><p>Pour commencer à jouer, entraînez-vous sur la flèche ci-dessous.<br />Cliquez sur un clou pour attacher votre corde et commencer.</p>"
));
	
Datas.push(new LevelDatas(
	EulerPathLevel,
	"320,50|200,150|440,150|200,400|440,400:0,1|0,2|1,2|1,3|1,4|2,3|2,4|3,4",
	"Maison"));
	
Datas.push(new LevelDatas(
	EulerPathLevel,
	"290,50|350,50|220,150|420,150|320,300|320,400|320,440:0,1|0,2|0,3|0,4|1,2|1,3|1,4|2,4|2,5|3,4|3,5|5,6",
	"Labelled Eulergraph.svg http://en.wikipedia.org/wiki/File:Labelled_Eulergraph.svg"));
	
Datas.push(new LevelDatas(
	EulerPathLevel,
	"172,92|172,388|468,388|468,92|320,110|190,240|320,370|450,240|285,205|285,275|355,275|355,205:0,1|0,3|0,4|0,5|1,2|1,5|1,6|2,3|2,6|2,7|3,4|3,7|4,8|4,11|5,8|5,9|6,9|6,10|7,10|7,11|8,9|9,10|10,11|11,8",
	"Cuboctahedral Graph http://mathworld.wolfram.com/CuboctahedralGraph.html"));
	
Datas.push(new LevelDatas(
	EulerPathLevel,
	"320,50|270,90|370,90|320,130|150,250|490,250|100,290|220,280|420,280|540,290|150,330|490,330:0,1|0,2|1,3|1,2|2,3|1,4|2,5|4,6|4,7|4,10|5,8|5,9|5,11|6,10|7,10|8,11|9,11|10,11|7,8",
	"Graphe d'explication algorithme de Fleury http://www.cmis.brighton.ac.uk/~jt40/MM322/MM322_FleurysAlgorithm.pdf"));
	
Datas.push(new LevelDatas(
	EulerPathLevel,
	"389,74|251,74|154,171|154,309|251,406|389,406|486,309|486,171:0,1|0,2|0,3|0,4|0,6|0,7|1,2|1,3|1,5|1,6|1,7|2,4|2,5|2,6|2,7|3,4|3,5|3,6|3,7|4,5|4,6|4,7|5,6|5,7",
	"Cocktail Party Graph http://mathworld.wolfram.com/CocktailPartyGraph.html"));
	
Datas.push(new LevelDatas(
	EulerPathLevel,
	"202,78|130,178|130,302|202,402|320,440|438,402|510,302|510,178|438,78|320,40|249,217|276,301|364,301|391,217|320,165:8,9|9,0|0,1|1,2|2,3|3,4|4,5|5,6|6,7|7,8|0,2|2,4|4,6|6,8|8,0|10,12|12,14|14,11|11,13|13,10|9,10|9,13|1,14|1,11|3,10|3,12|5,11|5,13|7,12|7,14",
	"Des étoiles plein la tête !"));
	
Datas.push(new LevelDatas(
	EulerPathLevel,
	"115,35|115,445|525,445|525,35|387,78|253,78|158,173|158,307|253,402|387,402|482,307|482,173|353,160|287,160|240,207|240,273|287,320|353,320|400,273|400,207|302,222|302,258|338,258|338,222:0,1|1,2|2,3|3,0|0,5|0,6|1,7|1,8|2,9|2,10|3,11|3,4|4,5|5,6|6,7|7,8|8,9|9,10|10,11|11,4|12,13|13,14|14,15|15,16|16,17|17,18|18,19|19,12|20,21|21,22|22,23|23,20|11,19|4,12|5,13|6,14|7,15|8,16|9,17|10,18|19,23|12,23|13,20|14,20|15,21|16,21|17,22|18,22",
	"Small Rhombicuboctahedral Graph http://mathworld.wolfram.com/SmallRhombicuboctahedralGraph.html"));

//Datas.push(new LevelDatas(
	//EulerPathLevel,
	//"451,76|273,35|131,149|131,331|273,445|451,404|530,240|414,123|287,94|185,175|185,305|287,386|414,357|470,240|370,177|302,162|248,205|248,275|302,318|370,303|400,240:0,2|0,5|0,7|0,13|1,3|1,8|1,7|1,6|2,4|2,8|2,9|3,5|3,9|3,10|4,6|4,10|4,11|5,11|5,12|6,13|6,12|7,20|7,15|8,14|8,16|9,15|9,17|10,16|10,18|11,17|11,19|12,18|12,20|13,19|13,14",
	//"Brinkmann Graph http://mathworld.wolfram.com/BrinkmannGraph.html"));
	
Datas.push(new LevelDatas(
	EulerPathLevel,
	"473,111|355,43|220,67|132,172|132,308|220,413|355,437|473,369|520,240|412,163|341,122|260,136|207,199|207,281|260,344|341,358|412,317|440,240|366,201|330,181|290,188|264,219|264,261|290,292|330,299|366,279|380,240:0,1|1,2|2,3|3,4|4,5|5,6|6,7|7,8|8,0|0,10|0,19|1,11|1,20|2,12|2,21|3,13|3,22|4,14|4,23|5,15|5,24|6,16|6,25|7,17|7,26|8,9|8,18|17,10|10,12|12,14|14,16|16,9|9,11|11,13|13,15|15,17|18,23|23,19|19,24|24,20|20,25|25,21|21,26|26,22|22,18|10,19|11,20|12,21|13,22|14,23|15,24|16,25|17,26",
	"Doyle Graph http://mathworld.wolfram.com/DoyleGraph.html"));
	

	
/*Datas.push(new LevelDatas(
	EulerPathLevel,
	"320,50|270,100|370,100|220,150|320,150|420,150|170,200|270,200|370,200|470,200|120,250|220,250|320,250|420,250|520,250|270,300|370,300|220,350|320,350|420,350:0,1|0,2|1,2|1,3|1,4|2,4|2,5|3,6|3,7|3,4|4,5|5,8|5,9|6,10|6,11|6,7|7,11|7,12|8,9|8,12|8,13|9,13|9,14|10,11|11,12|12,13|13,14|12,15|12,16|15,17|15,16|15,18|16,18|16,19|17,18|18,19",
	"Sierpiński Graph http://mathworld.wolfram.com/SierpinskiGraph.html"));*/
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
/**
 * DEUXIÈME PARTIE DE JEU : HAMILTON
 */

 Datas.push(new LevelDatas(
	HamiltonLevel,
	"550,340|530,360|450,365|600,380|450,415|600,400|530,420|550,440:0,3|3,2|2,4|2,1|1,6|6,4|4,5|5,7|7,0|3,5",
	"Flèche Tutorial Hamilton",
	"<p>Vous avez maintenant fini l'échauffement, passons à la partie intéressante !</p><p></p><p>Changement de règle : il faut passer une et une seule fois sur chaque clou, en utilisant uniquement les traits disponibles pour joindre deux clous (mais vous n'êtes pas obligés de passer sur tous les traits).</p><p>Contrainte supplémentaire : il faut commencer et finir sur le même point.</p>"));
	
Datas.push(new LevelDatas(
	HamiltonLevel,
	"320,40|111,172|191,418|449,418|529,172|280,240|360,240:0,1|1,2|2,3|3,4|4,0|0,5|0,6|1,6|2,6|3,5|4,5",
	"Moser Spindle http://mathworld.wolfram.com/MoserSpindle.html"));

Datas.push(new LevelDatas(
	HamiltonLevel,
	"420,67|220,67|120,240|220,413|420,413|520,240|370,153|270,153|220,240|270,327|370,327|420,240:0,1|1,2|2,3|3,4|4,5|5,0|6,7|7,8|8,9|9,10|10,11|11,6|0,11|5,6|1,8|2,7|3,10|4,9",
	"Franklin Graph http://mathworld.wolfram.com/FranklinGraph.html"));

Datas.push(new LevelDatas(
	HamiltonLevel,
	"388,31|142,111|142,369|388,449|540,240|366,97|199,152|199,328|366,383|470,240|289,145|220,240|289,335|401,299|401,181|305,192|270,240|305,288|360,269|360,211:0,1|1,2|2,3|3,4|4,0|0,5|1,6|2,7|3,8|4,9|9,13|9,14|5,14|5,10|6,10|6,11|7,11|7,12|8,12|8,13|14,19|10,15|11,16|12,17|13,18|19,15|15,16|16,17|17,18|18,19",
	"Dodecahedron http://mathworld.wolfram.com/IcosianGame.html"));
	
Datas.push(new LevelDatas(
	HamiltonLevel,
	"258,50|120,240|258,430|482,358|482,122|289,145|220,240|289,335|401,299|401,181|320,240:0,1|1,2|2,3|3,4|4,0|0,6|0,9|1,5|1,7|2,6|2,8|3,7|3,9|4,5|4,8|5,10|6,10|7,10|8,10|9,10",
	"Grötzsch graph http://mathworld.wolfram.com/GroetzschGraph.html"));
	
Datas.push(new LevelDatas(
	HamiltonLevel,
	"484,167|440,106|376,69|301,61|174,134|144,203|144,277|174,346|230,396|301,419|376,411|440,374|484,313|500,240|320,240:0,1|1,2|2,3|4,5|5,6|6,7|7,8|8,9|9,10|10,11|11,12|12,13|13,0|3,6|5,9|8,12|11,1|13,14|2,14|4,14|7,14|10,14",
	"Hypohamiltonian graph constructed by Lindgren http://en.wikipedia.org/wiki/Hypohamiltonian_graph"));
	
Datas.push(new LevelDatas(
	HamiltonLevel,
	"476,150|436,102|382,71|258,71|204,102|164,150|143,209|143,271|164,330|204,378|258,409|320,420|382,409|436,378|476,330|497,271|497,209|320,240:0,1|1,2|3,4|4,5|5,6|6,7|7,8|8,9|9,10|10,11|11,12|12,13|13,14|14,15|15,16|16,0|0,17|5,17|2,6|4,9|7,11|8,13|10,14|12,1|3,16",
	"First Blanusa Snarks http://mathworld.wolfram.com/BlanusaSnarks.html"));
	
Datas.push(new LevelDatas(
	HamiltonLevel,
	"320,20|129,130|129,350|320,460|511,350|511,130|320,90|190,165|190,315|320,390|450,315|450,165|320,150|242,195|242,285|320,330|398,285|398,195:0,1|1,2|2,3|3,4|4,5|5,0|0,6|1,7|2,8|3,9|4,10|5,11|12,15|13,16|14,17|6,13|13,8|8,15|15,10|10,17|17,6|11,12|12,7|7,14|14,9|9,16|16,11",
	"Pappus Graph http://mathworld.wolfram.com/PappusGraph.html"));

Datas.push(new LevelDatas(
	HamiltonLevel,
	"476,84|320,20|164,84|100,240|164,396|320,460|476,396|540,240|414,99|287,73|179,146|153,273|226,381|353,407|461,334|487,207|366,129|274,129|209,194|209,286|274,351|366,351|431,286|431,194:0,1|1,2|2,3|3,4|4,5|5,6|6,7|7,0|0,8|1,9|2,10|3,11|4,12|5,13|6,14|7,15|8,16|9,17|10,18|11,19|12,20|13,21|14,22|15,23|16,19|19,22|22,17|17,20|20,23|23,18|18,21|21,16",
	"McGee graph modifié http://en.wikipedia.org/wiki/McGee_graph"));

Datas.push(new LevelDatas(
	HamiltonLevel,
	"225,30|415,30|255,45|385,45|215,60|425,60|295,75|345,75|320,55|295,95|345,95|215,115|425,115|260,130|380,130|225,145|415,145|240,170|400,170|225,200|415,200|174,448|79,284|172,415|107,302|204,442|99,260|177,365|152,322|148,353|195,355|170,312|252,414|147,233|243,368|183,264|273,391|178,226|287,365|207,227|321,363|561,284|466,448|533,302|468,415|541,260|436,442|488,322|463,365|492,354|470,312|445,355|493,233|388,414|457,264|397,368|462,226|367,391|433,227:0,1|0,2|0,4|1,3|1,5|2,6|2,13|3,7|3,14|4,9|4,11|5,10|5,12|6,8|6,11|7,8|7,12|8,9|8,10|9,13|10,14|11,15|12,16|13,15|14,16|15,17|16,18|17,19|18,20|15,16|17,18|19,20|21,22|21,23|21,25|22,24|22,26|23,27|23,34|24,28|24,35|25,30|25,32|26,31|26,33|27,29|27,32|28,29|28,33|29,30|29,31|30,34|31,35|32,36|33,37|34,36|35,37|36,38|37,39|38,40|39,19|36,37|38,39|19,40|41,42|41,43|41,45|42,44|42,46|43,47|43,54|44,48|44,55|45,50|45,52|46,51|46,53|47,49|47,52|48,49|48,53|49,50|49,51|50,54|51,55|52,56|53,57|54,56|55,57|56,58|56,57|58,20|20,40|21,42|22,0|1,41",
	"60 Graph Thomassen"));
	
Datas.push(new LevelDatas(
	HamiltonLevel,
	"536,197|523,156|503,118|476,84|442,57|404,37|363,24|320,20|277,24|236,37|198,57|164,84|137,118|117,156|104,197|100,240|104,283|117,324|137,362|164,396|198,423|236,443|277,456|320,460|363,456|404,443|442,423|476,396|503,362|523,324|536,283|540,240:2,0|4,3|5,2|6,1|7,0|8,6|9,5|10,4|11,3|12,2|12,11|13,1|13,10|14,0|14,9|15,8|16,7|17,6|18,5|18,16|19,4|19,15|20,3|20,14|21,2|21,13|22,1|22,12|23,0|23,11|24,10|24,23|25,9|25,22|26,8|26,21|27,7|27,20|28,6|28,19|29,5|29,18|30,4|30,17|31,3|31,16",
	"Tauraso's graph http://www.dharwadker.org/hamilton/"));
	
Datas.push(new LevelDatas(
	EndLevel,
	"",
	":)"));

//Doily http://home.wlu.edu/~mcraea/Finite_Geometry/Applications/Prob33Walks/doily.gif
//NON EULERIEN / NON HAMILTONIEN
//addChild(new EulerPathLevel("382,50|158,122|158,358|382,430|520,240|267,78|150,240|267,402|458,340|458,140|283,126|200,240|283,354|417,311|417,169:4,9|9,0|0,5|5,1|1,6|6,2|2,7|7,3|3,8|8,4|0,7|5,3|1,8|6,4|2,9|5,11|5,14|6,10|6,12|7,11|7,13|8,12|8,14|9,10|9,13"));